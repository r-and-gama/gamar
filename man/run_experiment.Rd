% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_experiment.R
\name{run_experiment}
\alias{run_experiment}
\title{Run an experiment}
\usage{
run_experiment(
  exp,
  hpc = 1,
  save = FALSE,
  path = NULL,
  display = FALSE,
  append = TRUE
)
}
\arguments{
\item{exp}{an object of class experiment.}

\item{hpc}{number of threads used by GAMA to run the experiment.}

\item{save}{save the outputs to disk or not, default = FALSE.}

\item{path}{directory to save the outputs, default = NULL.
If \code{save = TRUE} and \code{path} is not
specified, current working directory is used to save the outputs.}

\item{display}{output images are saved or not, default = FALSE.}

\item{append}{append outputs to experiment, default = TRUE.}
}
\description{
From an \code{experiment} object, run an experiment by creating an XML file
of the experiment (\code{\link[gamar]{save_to_gama}}) and by calling gama
(\code{\link[gamar]{call_gama}}) and appends the results to the object
\code{experiment} inputted in the column \code{output} (one by simulation).
}
\details{
We advice the user to validate their model in Gama Platform before using
rgamar.\cr\cr
When the argument \code{save} is equal to \code{TRUE}, a folder with the name
of the experiment of the object \code{exp} is created. The folder contains
two folder: \code{output} containing the result in XML and \code{input}
containing the model file associated in GAML and the XML associated to the
object `exp` inputted in the function. \cr\cr
If the argument \code{display} is equal to \code{TRUE}, the argument
\code{save} is automaticaly set to \code{TRUE}, a folder \code{snapshot} is
add into the folder \code{output}, and contained the display output from
GAMA.\cr\cr
If the object \code{exp} contains no \code{obs_rates}, the object \code{exp}
is returned without calling gama. In this case, the column \code{output}
is returned with \code{NA}.
}
\examples{
#load experiment
gaml_file <- system.file("models", "sir.gaml", package = "gamar")
exp1 <- load_experiment("sir", gaml_file)
# run experiment
out <- run_experiment(exp1, hpc = 2)

# for a more complexe example
exp1 <- repl(exp1, 2)
exp1$r_R <- 2L:3L
exp1$tmax <- 2L
output <- run_experiment(exp1, hpc = 2)
output

# to save the experiment input and output (by default in the working directory)
output <- run_experiment(exp1, hpc = 2, save = TRUE)
}
